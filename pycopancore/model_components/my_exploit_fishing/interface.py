"""model component Interface template.

TODO: adjust or fill in code and documentation wherever marked by "TODO:", then
remove these instructions.
"""

# This file is part of pycopancore.
#
# Copyright (C) 2017 by COPAN team at Potsdam Institute for Climate
# Impact Research
#
# URL: <http://www.pik-potsdam.de/copan/software>

# Use variables from the master data model wherever possible
from ... import master_data_model as D

# TODO: uncomment and adjust to use variables from other pycopancore model
# components:
# from ..MODEL_COMPONENT import interface as MODEL_COMPONENT
from ..my_exploit_growth import interface as G
# TODO: uncomment and adjust only if you really need other variables:
from ... import Variable


class Model (object):
    """Interface for Model mixin."""

    # metadata:
    name = "my exploit: fishing"
    """a unique name for the model component"""
    description = "fishing component of the tutorial model"
    """some longer description"""
    requires = []
    """list of other model components required for this model component to
    make sense"""

    # Notes:
    # - Model does NOT define variables or parameters, only entity types
    #   and process taxons do!
    # - implementation.Model lists these entity-types and process taxons


#
# Entity types
#
class Individual (object):
    """Interface for Individual entity type mixin."""

    # endogenous variables:
    catch = Variable("fishing catch",
        "flow of fish received due to fishing",
        unit = G.Model.t_fish / D.months,
        lower_bound = 0,
        is_extensive = True)

    # TODO: use variables from the master data model wherever possible
    # wherever possible!:
    # ONEINDIVIDUALVARIABLE = master_data_model.Individual.ONEINDIVIDUALVARIABLE

    # TODO: uncomment and adjust if you need further variables from another
    # model component:
    # ANOTHERINDIVIDUALVARIABLE= MODEL_COMPONENT.Individual.ANOTHERINDIVIDUALVARIABLE

    # TODO: uncomment and adjust only if you really need other variables:
    # PERSONALINDIVIDUALVARIABLE = Variable("name", "desc", unit=..., ...)

    # exogenous variables / parameters:
    fishing_effort = Variable("fishing effort",
        "effort spent fishing",
        unit = D.person_hours / D.weeks,
        lower_bound = 0,
        is_extensive = True,
        default = 40 * D.person_hours / D.weeks)

class Cell (object):
    """Interface for Cell entity type mixin."""

    # endogenous variables:
    fish_stock = G.Cell.fish_stock
    total_fishing_effort = Individual.fishing_effort.copy()
    total_catch = Individual.catch.copy()
    
    # TODO: use variables from the master data model wherever possible
    # wherever possible!:
    # ONECELLVARIABLE = master_data_model.Cell.ONECELLVARIABLE

    # TODO: uncomment and adjust if you need further variables from another
    # model component:
    # ANOTHERCELLVARIABLE= MODEL_COMPONENT.Cell.ANOTHERCELLVARIABLE

    # TODO: uncomment and adjust only if you really need other variables:
    # PERSONALCELLVARIABLE = Variable("name", "desc", unit=..., ...)

    # exogenous variables / parameters:
    
#
# Process taxa
#
class Metabolism (object):
    """Interface for Metabolism process taxon mixin."""

    # endogenous variables:

    # TODO: use variables from the master data model wherever possible
    # wherever possible!:
    # ONEMETABOLISMVARIABLE = master_data_model.Metabolism.ONEMETABOLISMVARIABLE

    # TODO: uncomment and adjust if you need further variables from another
    # model component:
    # ANOTHERMETABOLISMVARIABLE= MODEL_COMPONENT.Metabolism.ANOTHERMETABOLISMVARIABLE

    # TODO: uncomment and adjust only if you really need other variables:
    # PERSONALMETABOLISMVARIABLE = Variable("name", "desc", unit=..., ...)

    # exogenous variables / parameters:
    catch_cost_coeff = Variable(
        "catch cost coeff.",
        """coefficient c of quadratic fishing cost function
        effort = c * catch**2""",
        unit = (D.person_hours / D.weeks) * D.years**2,
        lower_bound = 0,
        default = (40 * D.person_hours / D.weeks) / (1 / D.years)**2)
            # so at 40 hrs per week, stock declines at rate 1/year
