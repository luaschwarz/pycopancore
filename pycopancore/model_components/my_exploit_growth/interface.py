"""model component Interface template.

TODO: adjust or fill in code and documentation wherever marked by "TODO:", then
remove these instructions.
"""

# This file is part of pycopancore.
#
# Copyright (C) 2017 by COPAN team at Potsdam Institute for Climate
# Impact Research
#
# URL: <http://www.pik-potsdam.de/copan/software>

# Use variables from the master data model wherever possible
from ... import master_data_model as D

from ...data_model import Dimension, Unit
# TODO: uncomment and adjust to use variables from other pycopancore model
# components:
# from ..MODEL_COMPONENT import interface as MODEL_COMPONENT

# TODO: uncomment and adjust only if you really need other variables:
from ... import Variable


class Model (object):
    """Interface for Model mixin."""

    # metadata:
    name = "my exploit: growth"
    """a unique name for the model component"""
    description = "growth component of the tutorial model"
    """some longer description"""
    requires = []
    """list of other model components required for this model component to
    make sense"""
    fish = Dimension("fish", # name 
                     "mass of fish") # description
    fish.default_unit = t_fish = \
        Unit("t fish", "metric tonnes of fish", symbol="t")

    # Notes:
    # - Model does NOT define variables or parameters, only entity types
    #   and process taxons do!
    # - implementation.Model lists these entity-types and process taxons


#
# Entity types
#
class Cell (object):
    """Interface for Cell entity type mixin."""

    # endogenous variables:

    # TODO: use variables from the master data model wherever possible
    # wherever possible!:
    # ONECELLVARIABLE = master_data_model.Cell.ONECELLVARIABLE

    # TODO: uncomment and adjust if you need further variables from another
    # model component:
    # ANOTHERCELLVARIABLE= MODEL_COMPONENT.Cell.ANOTHERCELLVARIABLE

    # TODO: uncomment and adjust only if you really need other variables:
    fish_stock = Variable("fish stock",
                                    "stock of a generic local ressource 'fish' that can grow and be harvested",
                                    unit = Model.t_fish,
                                    lower_bound = 0,
                                    is_extensive = True)

    # exogenous variables / parameters:
    fish_capacity = Variable("fish capacity",
        "limit to fish stock due to competition for resources",
        unit = Model.t_fish,
        lower_bound = 0,
        is_extensive = True,
        default = 1 * Model.t_fish)


#
# Process taxa
#
class Environment (object):
    """Interface for Environment process taxon mixin."""

    # endogenous variables:

    # TODO: use variables from the master data model wherever possible
    # wherever possible!:
    # ONEENVIRONMENTVARIABLE = master_data_model.Environment.ONEENVIRONMENTVARIABLE

    # TODO: uncomment and adjust if you need further variables from another
    # model component:
    # ANOTHERENVIROMENTVARIABLE= MODEL_COMPONENT.Environment.ANOTHERENVIROMENTVARIABLE

    # TODO: uncomment and adjust only if you really need other variables:
    # PERSONALENVIROMENTVARIABLE = Variable("name", "desc", unit=..., ...)

    # exogenous variables / parameters:
    basic_fish_growth_rate = Variable("basic fish growth rate",
        "basic rate at which fish would grow without competition",
        unit = D.months**(-1),
        lower_bound = 0,
        is_intensive = True,
        default = 2 / D.years)

