"""model component Interface template.

TODO: adjust or fill in code and documentation wherever marked by "TODO:", then
remove these instructions.
"""

# This file is part of pycopancore.
#
# Copyright (C) 2017 by COPAN team at Potsdam Institute for Climate
# Impact Research
#
# URL: <http://www.pik-potsdam.de/copan/software>

# Use variables from the master data model wherever possible
from ... import master_data_model as D

# TODO: uncomment and adjust to use variables from other pycopancore model
# components:
# from ..MODEL_COMPONENT import interface as MODEL_COMPONENT
from ..my_exploit_fishing import interface as F

# TODO: uncomment and adjust only if you really need other variables:
from ... import Variable


class Model (object):
    """Interface for Model mixin."""

    # metadata:
    name = "my exploit: learning"
    """a unique name for the model component"""
    description = "learning component of the tutorial model"
    """some longer description"""
    requires = []
    """list of other model components required for this model component to
    make sense"""

    # Notes:
    # - Model does NOT define variables or parameters, only entity types
    #   and process taxons do!
    # - implementation.Model lists these entity-types and process taxons


#
# Entity types
#
class Individual (object):
    """Interface for Individual entity type mixin."""

    # endogenous variables:
    fishing_effort = F.Individual.fishing_effort
    
    # TODO: use variables from the master data model wherever possible
    # wherever possible!:
    # ONEINDIVIDUALVARIABLE = master_data_model.Individual.ONEINDIVIDUALVARIABLE

    # TODO: uncomment and adjust if you need further variables from another
    # model component:
    # ANOTHERINDIVIDUALVARIABLE= MODEL_COMPONENT.Individual.ANOTHERINDIVIDUALVARIABLE

    # TODO: uncomment and adjust only if you really need other variables:
    # PERSONALINDIVIDUALVARIABLE = Variable("name", "desc", unit=..., ...)

    # exogenous variables / parameters:
    catch = F.Individual.catch
    
#
# Process taxa
#
class Culture (object):
    """Interface for Culture process taxon mixin."""

    # endogenous variables:
    acquaintance_network = D.Culture.acquaintance_network

    # TODO: use variables from the master data model wherever possible
    # wherever possible!:
    # ONECULTUREVARIABLE = master_data_model.Culture.ONECULTUREVARIABLE

    # TODO: uncomment and adjust if you need further variables from another
    # model component:
    # ANOTHERCULTUREVARIABLE= MODEL_COMPONENT.Culture.ANOTHERCULTUREVARIABLE

    # TODO: uncomment and adjust only if you really need other variables:
    # PERSONALCULTUREVARIABLE = Variable("name", "desc", unit=..., ...)

    # exogenous variables / parameters:
    fishing_update_rate = Variable("fishing effort update rate",
        """average number of time points per time where some individuals
        update their fishing effort""",
        unit = D.years**(-1), default = 1 / D.years, lower_bound = 0)
    fishing_update_prob = Variable(
        "fishing effort update probability",
        """probability that an individual updates their fishing effort at
        an update time point""",
        default = 1/2, lower_bound = 0, upper_bound = 1)
    fishing_exploration_prob = Variable(
        "fishing effort exploration probability",
        """probability that an individual copies a neighbours effort if
        both catches are equal""",
        default = 0.1, lower_bound = 0, upper_bound = 1)
    fishing_imitation_char_prob = Variable(
        "fishing effort imitation characteristic probability",
        """probability that an individual copies a neighbours effort if
        the other's catch is twice the own catch""",
        default = 0.9, lower_bound = 0, upper_bound = 1)
